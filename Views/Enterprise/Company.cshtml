<style>
::-webkit-scrollbar-button {
background-image:url('');
background-repeat:no-repeat;
width:5px;
height:0px
}

::-webkit-scrollbar-track {
background-color:#ecedee
}

::-webkit-scrollbar-thumb {
-webkit-border-radius: 0px;
border-radius: 0px;
background-color:#6dc0c8;
}

::-webkit-scrollbar-thumb:hover{
background-color:#56999f;
}

::-webkit-resizer{
background-image:url('');
background-repeat:no-repeat;
width:4px;
height:0px
}

::-webkit-scrollbar{
width: 4px;
}

    main {
        background-color: #EEF1F5;
    }

    .card {
        background-color: white;
        padding: 20px;
    }

    .card h3 {
        color: #578ebe;
        margin: 0;
    }

    .card label {
        display: block;

    }

    #manager label {
        margin: 5px;
        text-align: right;
    }

    #manager input {
        border: none;
        border-bottom: 1px solid #ccc;
        width: auto;
    }

  
</style>

<div id="app" style="display: flex;">
    <div class="card">
        <h3>Регистрационный данные (нельзя менять)</h3>
        <hr />
        <p>Тип предприятия: <b>{{info.entType}}</b></p>
        <p>Название предприятия: <b>{{info.entName}}</b></p>
        <p>ИИН/БИН предприятия: <b>{{info.entXin}}</b></p>
        <p>Адрес: <b>{{info.address}}</b></p>
        <p>Телефон: <b>{{info.phone}}</b></p>
        <p>Email: <b>{{info.email}}</b></p>
        <p>Документ регистрации: <b><a target="_blank" v-bind:href="info.document">Просмотреть</a> </b></p>
    </div>

    <div class="card" style="margin-left: 20px;">
        <h3>Руководитель</h3>
        <hr />
        <form id="manager" action="javascript:;">
            <label>
                Фамилия: <input placeholder="Введите фамилию" required v-model="info.surName" type="text" />
            </label>
            <label>
                Имя: <input placeholder="Введите имя" required v-model="info.name" type="text" />
            </label>
            <label>
                Отчество: <input v-model="info.middleName" type="text" />
            </label>
            <label>
                ИИН: <input placeholder="12 цифр" required pattern="[0-9]{12}" v-model="info.iin" type="text" />
            </label>
            <label>
                Логин: <input placeholder="5-8 символов" required pattern="[0-9a-z]{5,8}" v-model="info.login"
                    type="text" />
            </label>
            <label>
                Пароль: <input placeholder="5-10 символов" required pattern="[0-9a-z]{5,10}" v-model="info.password"
                    v-bind:type="passType" /> <button class="btn green" type="button" v-on:mousedown="passType='text'"
                    v-on:mouseup="passType='password'"><i class="fa fa-eye" aria-hidden="true"></i></button>
            </label>
            <div style="text-align: right;">
                <button v-on:click="SaveEmployee()" class="btn green">Сохранить</button>
            </div>
        </form>
    </div>

    <div class="card" style="margin-left: 20px; ">
        <h3>Сведения о документах</h3>
        <hr />
        <div style="max-height: 200px; overflow: auto;">
            <table>
                <thead>
                    <tr>
                        <th>#</th>
                        <th style="min-width: 150px;">Наименование</th>
                        <th style="min-width: 150px;">Тип документа</th>
                        <th style="min-width: 250px;">Описание</th>
                        <th style="min-width: 50px;">Файл</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>1</td>
                        <td>dddd</td>
                        <td>sffdd</td>
                        <td>sfdsfdsf</td>
                        <td>bddgfddd</td>
                    </tr>
                  
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts{
<script>
    let app = new Vue({
        el: '#app',
        data: {
            passType: 'password',
            info: {},
        },
        mounted() {
            this.getData();
        },
        methods: {
            checkIsInvalid: function () {
                let arrInput = manager.querySelectorAll("[required], [pattern]");
                let isInvalid = false;
                for (let inp of arrInput) {
                    if (inp.checkValidity()) {
                        inp.style.borderBottom = "1px solid #36c6d3";
                    } else {
                        inp.style.borderBottom = "1px solid red";
                        isInvalid = true;
                    }
                }
                return isInvalid;
            },
            SaveEmployee: async function () {
                if (this.checkIsInvalid()) {
                    return;
                }
                let resp = await axios.post('/Enterprise/SaveEntInfo', this.info);
                alert(resp.data);
            },
            getData: async function () {
                let resp = await axios.get('/Enterprise/GetEntInfo');
                this.info = resp.data;
            },
        }
    });
</script>
}