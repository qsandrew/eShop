<style>
    .card {
        border: 1px solid #32c5d2;
    }

    .card .title {
        font-size: 18px;
        padding: 10px;
        background-color: #32c5d2;
        color: white;
    }

    .card .body {
        padding: 15px;
    }

    table {
        color: #333;
        width: 100%;
        border-collapse: collapse;
    }

    table thead {
        background-color: #f1f4f7;
    }

    table th,
    table td {
        padding: 5px;
        border: 1px solid #e7ecf1;
    }

    table td:nth-child(1) {
        text-align: center;
    }
    table tbody td{
        text-align: center;
    }

    /* .vdp-datepicker__calendar {
        right: 0;
        color:black;
    } */
    
</style>

<!-- Global styles -->
<style>
    .btn {
        padding: 5px;
        border: 1px solid transparent;
    }
    button:hover{
        cursor: pointer;
    }

    input[type=text],
    select {
        box-sizing: border-box;
        width: 100%;
        padding: 5px;
        border: 1px solid #ccc;
    }
</style>

<!-- Global Color -->
<style>
    .green {
        color: #FFF;
        background-color: #32c5d2;
        border-color: #32c5d2;
    }

    .green:hover {
        background-color: #26a1ab;
        border-color: #26a1ab;

    }

    .outline {
        border: 1px solid #2f353b;
        color: #2f353b;
        background: transparent;
    }
    .outline:hover {
        border-color: #2f353b;
        color:white;
        background: #2f353b;
    }
</style>


<style>
    .modal {
        display: block;
        position: absolute;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
        
    }

    .modal-content {
        box-sizing: border-box;
        background-color: #fefefe;
        position: relative;
        margin: auto;
        top: 50%;
        transform: translateY(-50%);

        border: 1px solid #888;
        width: 400px;
    }

    .modal-content h3 {
        text-align: center;
        padding-bottom: 10px;
        color: #333;
        border-bottom: 1px solid #EFEFEF;
    }
    hr{
        border: 1px solid #EFEFEF;

    }
</style>

<!-- MaterialDesign Style -->
<style>
    .mtForm {
        margin: 0 40px;
    }

    .mtForm label {
        color: #36c6d3;
        display: block;
        margin-bottom: 10px;
    }

    .mtForm input,
    .mtForm select,
    .mtForm textarea {
        border: 0;
        border-bottom: 1px solid #c2cad8;
        outline: none;
        width: 100%;
        padding-left: 0;
    }

    .mtForm input:focus,
    .mtForm select:focus,
    .mtForm textarea:focus {
        border-bottom: 1px solid #36c6d3;
    }
</style>

<div id="app" class="card">
  
  
    <div class="modal" v-if="showEmp">
        <div class="modal-content">
            <h3>Добавить сотрудника</h3>
            <form id="formEmployee" class="mtForm">

                <label>Фамилия
                    <input type="text" v-model="emp.surName" required placeholder="Введите фамилию">
                </label>
                <label>Имя
                    <input type="text" v-model="emp.name" required placeholder="Введите имя">
                </label>
                <label>Отчество
                    <input type="text" v-model="emp.middleName" placeholder="Введите отчество (необ.)">
                </label>
                <label>ИИН
                    <input type="text" v-model="emp.iin" required pattern="[0-9]{12}" maxlength="12"  placeholder="Введите ИИН (12 цифр)">
                </label>
                <label>Должность
                    <select v-model="emp.positionId">
                        <option disabled>Выберите должность</option>
                        <option v-for="p in positions" v-bind:value="p.id">{{p.name}}</option>
                    </select>
                </label>
               
                <label>Работает с
                    
                    <input v-model="emp.fromDate" type="date" required placeholder="Введите дату">
                </label>
                    <!-- <vuejs-datepicker  v-model="emp.fromDate"></vuejs-datepicker> -->
                <label>Статус
                    <select v-model.number=emp.statusWork>
                        <option value="1">Работает</option>
                        <option value="2">Отпуск</option>
                        <option value="3">Болеет</option>
                        <option value="4">Уволен</option>
                    </select>
                </label>
            </form>
            <hr />
            <div style="margin: 10px; text-align: right;">
                <button class="btn outline" v-on:click="closeWinEmp()">Отмена</button>
                <button class="btn green" v-on:click="saveEmployee()">Сохранить</button>
            </div>

        </div>

    </div>
    
    <div class="title"><i class="fa fa-comments"></i> Сотрудники</div>
    <div class="body">
        <button style="margin-bottom: 10px;" class="btn green" v-on:click="showAddEmp()"> Добавить
            <i class="fa fa-plus"></i>
        </button>

        <table>
            <thead>
                <tr>
                    <th style="width: 50px;">#</th>
                    <th>ФИО</th>
                    <th style="width: 150px;">ИИН</th>
                    <th style="width: 200px;">Должность</th>
                    <th style="width: 100px;">Работает с</th>
                    <th style="width: 150px;">Статус</th>
                    <th style="width: 100px;">Действия</th>
                </tr>
                <tr>
                    <th></th>
                    <th><input type="text"></th>
                    <th><input type="text"></th>
                    <th>
                        <select>
                            <option></option>
                            <option v-for="p in positions" v-bind:value="p.id">{{p.name}}</option>
                        </select>
                    </th>
                    <th></th>
                    <th>
                        <select>
                            <option></option>
                            <option value="1">Работает</option>
                            <option value="2">Отпуск</option>
                            <option value="3">Болеет</option>
                            <option value="4">Уволен</option>
                        </select>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(emp,ind) in employees">
                    <td>{{ind}}</td>
                    <td>{{emp.fullName}}</td>
                    <td>{{emp.iin}}</td>
                    <td>{{emp.positionName}}</td>
                    <td>{{emp.fromDate}}</td>
                    <td>{{emp.statusName}}</td>
                    <td>dd</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section Scripts{

    <!-- <script src="/vuejs-datepicker.min.js"></script> -->
<script>
    const app = new Vue({
        el: '#app',
        // components: {
        //     vuejsDatepicker
        // },
        data: {
            showEmp:false,
            employees:[],
            positions: [],
            emp:{
                surName:'',
                name:'',
                middleName:'',
                iin:'',
                positionId:0,
                fromDate:'',
                statusWork:1
            }
        },
      
        mounted() {
            this.getEmployees();
            this.getPositions();
        },
        methods: {
            getEmployees: async function () {
                let resp = await axios.get('/Enterprise/GetEmployees');
                this.employees = resp.data;
            },

            showAddEmp:function(){
                this.showEmp=true;
            },

            checkIsInvalid:function(){
                let arrInput = formEmployee.querySelectorAll("[required], [pattern]");
                let isInvalid=false;
                for (let inp of arrInput) {
                    if(inp.checkValidity()){
                        inp.style.borderBottom= "1px solid #36c6d3";
                    }else{
                        inp.style.borderBottom= "1px solid red";
                        isInvalid = true;
                    }
                }
                return isInvalid;
            },
            saveEmployee:async function(){
                if(this.checkIsInvalid()){

                    return;
                }
                let resp = await axios.post('/Enterprise/SaveEmployee', this.emp);
                alert(resp.data);
            },

            closeWinEmp:function(){
                formEmployee.reset(); 
                this.showEmp=false;
            },
            getPositions: async function () {
                let resp = await axios.get('/Enterprise/GetPositions');
                this.positions = resp.data;
                this.emp.positionId= this.positions[0].id
            },
            
        }

    })
</script>
}